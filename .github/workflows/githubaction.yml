name: Build and Deploy React App to S3

on:
  push:
    branches:
      - main  # Trigger the action on pushes to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code and Set Up Node.js
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies and Build React App
      run: |
        npm install
        npm run build

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: react-build
        path: build  # Upload the 'build' directory
  
  docker_build_push:
    name: build and push container to github container registry
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Step 3: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Build the Docker image
      - name: Build the Docker image
        run: docker build -t ghcr.io/gilbertdaniel/personal-site/portfolio:latest .

      # Step 5: Push the Docker image to GitHub Container Registry
      - name: Push Docker image to GitHub Container Registry
        run: docker push ghcr.io/gilbertdaniel/personal-site/portfolio:latest

  sonarqube-code-analysis:
    name: code analysis
    runs-on: ubuntu-latest
    needs : build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-s3:
    name: deploy on s3
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to S3
      uses: actions/download-artifact@v4
      with:
        name: react-build
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - run: |
        aws s3 sync . s3://${{ secrets.AWS_S3_BUCKET }} --delete
  
  deploy-ec2:
    name: deploy on ec2
    runs-on: ubuntu-latest
    needs: docker_build_push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy to EC2 using Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          cd /home/react-personal-site
          pwd
          ls
          docker-compose -f /home/react-personal-site/docker-compose.yml down -v         
          docker-compose -f /home/react-personal-site/docker-compose.yml up -d
          EOF
